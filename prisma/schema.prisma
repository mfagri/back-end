// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model User {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email  String? @unique
  username String? @unique
  image String?
  intrrid String @unique
  auth String?
  profile Profile?
  friends         User[]  @relation("friends")
  friendsRelation User[]  @relation("friends")
  request           User[]    @relation("request")
  requestedBy       User[]   @relation("request")
  ///
  inbox          Inbox?
  rooms          Room[]
  messages       Message[]
}

model Profile{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User? @relation(fields: [Userid],references: [id], onDelete: Cascade)
  Userid Int? @unique
  username String @unique
  image String
  email String? @unique
  
}

model Inbox {
  id      Int    @id() @default(autoincrement())
  userId  Int    @unique
  inboxOf User   @relation(fields: [userId], references: [id])
  rooms   Room[]
}


model Room {
  id          Int       @id() @default(autoincrement())
  group       Boolean   @default(false)
  whoJoined   User[]
  room_name   String?
  inbox       Inbox[]
  messages    Message[]
  roomPicture String?
}

model Message {
  id        Int      @id @default(autoincrement())
  createdBy User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  content   String
  room      Room     @relation(fields: [roomId], references: [id])
  roomId    Int
  userId    Int
}